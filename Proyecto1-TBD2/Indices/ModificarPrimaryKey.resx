<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>